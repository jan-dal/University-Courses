from gmpy2 import mpz, powmod, invert
from Crypto.Cipher import PKCS1_OAEP
from Crypto.PublicKey import RSA
from cfrac_attack import *

n = mpz(71502864762146481719921706717489647274401371264339912861896668788523408898399987584458867427150377982863182827723210496949296670656691865361398662494882040185240162250557186910283675756901011497105524781775877739937033106782971695711279690633676059066099291799230305634094313871898669144926153021806765337119)

e = mpz(2021535990211590963017392592316424966597438880474232111192775168758971118971196922496380667821335075997803106339714897610001405009507387105725190113425251075371250635294214688303728478757021436787448387590713186179971049230570754206241716782351576777192891629109675421410740010665647739359531488881247608893)

c = mpz(11082654163992889966937081216469536092855372877830170801391074009938283764131402702142522449539548056861363178604843012732845321117971029337044235912075529292818433608673399493341132759983839518254462865269604514587326961477653706871966704041403585496706489782405250635217828118770419571135724118079099242511)


n1 = 132976518568428873590990698990473888147434186684055790647542257711183504300793567894763258123494558264011608829984042495270894713938736746289613125052979025936004467648488790223063947335152106970185641201512558554026954048393654332511691849974991216693754764137851682541757604893914324078124535978192415120291

e1 = 65537

d1 = 90691539900408400794917546924290269291024396023883328113480877869245908291996431087663966131282119577132411918058451674796270519384770684482152644315318102571397196010481370395695226323681136902628494694117140916057608574759453391255173778818496321940136314911468520140003952162724505217290328347539832915473

c1 = 1870354018880565344015607227802018464339913292839207596213694861461546326744480575982943658275496013764496898823086616172739702067056030563993752853492426315822401955306495125526121384654234109008503673416179122921698341936032576481797722407090617199577534216413725330438503363687421855122532316789130863802


p, q, t = break_rsa(e, n)
d = invert(e, mpz(p-1)*mpz(q-1))

key = RSA.construct((n1, e1, d1))

cipher = PKCS1_OAEP.new(key)
ciphertext = cipher.decrypt(c1.to_bytes((c1.bit_length() + 7) // 8))

print(ciphertext)
