
zadanie1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  000007c8  0000085c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007c8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000014  0080010c  0080010c  00000868  2**0
                  ALLOC
  3 .stab         000008d0  00000000  00000000  00000868  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000ed8  00000000  00000000  00001138  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00002010  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002024  2**2
                  CONTENTS, READONLY
  7 .debug_info   000005f4  00000000  00000000  00002064  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000005a2  00000000  00000000  00002658  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000001a  00000000  00000000  00002bfa  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000208  00000000  00000000  00002c14  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 ec       	ldi	r30, 0xC8	; 200
  7c:	f7 e0       	ldi	r31, 0x07	; 7
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 30       	cpi	r26, 0x0C	; 12
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ac e0       	ldi	r26, 0x0C	; 12
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 32       	cpi	r26, 0x20	; 32
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 99 00 	call	0x132	; 0x132 <main>
  9e:	0c 94 e2 03 	jmp	0x7c4	; 0x7c4 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <uart_transmit>:
}

int uart_transmit(char data)
{
  // czekaj aż transmiter gotowy
  while(!(UCSR0A & _BV(UDRE0)));
  a6:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  aa:	95 ff       	sbrs	r25, 5
  ac:	fc cf       	rjmp	.-8      	; 0xa6 <uart_transmit>
  UDR0 = data;
  ae:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
  return 0;
}
  b2:	80 e0       	ldi	r24, 0x00	; 0
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	08 95       	ret

000000b8 <uart_receive>:

// odczyt jednego znaku
int uart_receive(FILE *stream)
{
  // czekaj aż znak dostępny
  while (!(UCSR0A & _BV(RXC0)));
  b8:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  bc:	87 ff       	sbrs	r24, 7
  be:	fc cf       	rjmp	.-8      	; 0xb8 <uart_receive>
  return UDR0;
  c0:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	08 95       	ret

000000c8 <uart_init>:
#define UBRR_VALUE ((F_CPU)/16/(BAUD)-1)   // zgodnie ze wzorem

void uart_init()
{
  // ustaw baudrate
  UBRR0 = UBRR_VALUE;
  c8:	87 e6       	ldi	r24, 0x67	; 103
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
  d0:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  // wyczyść rejestr UCSR0A
  UCSR0A = 0;
  d4:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  // włącz odbiornik i nadajnik
  UCSR0B = _BV(RXEN0) | _BV(TXEN0);
  d8:	88 e1       	ldi	r24, 0x18	; 24
  da:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
  // ustaw format 8n1
  UCSR0C = _BV(UCSZ00) | _BV(UCSZ01);
  de:	86 e0       	ldi	r24, 0x06	; 6
  e0:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
  e4:	08 95       	ret

000000e6 <adc_init>:
FILE uart_file;

// inicjalizacja ADC
void adc_init()
{
  ADMUX   = _BV(REFS0) | _BV(REFS1); // referencja 1.1V
  e6:	80 ec       	ldi	r24, 0xC0	; 192
  e8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
  DIDR0   = _BV(ADC0D); // wyłącz wejście cyfrowe na ADC0
  ec:	81 e0       	ldi	r24, 0x01	; 1
  ee:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7f807e>
  // częstotliwość zegara ADC 125 kHz (16 MHz / 128)
  ADCSRA  = _BV(ADPS0) | _BV(ADPS1) | _BV(ADPS2); // preskaler 128
  f2:	ea e7       	ldi	r30, 0x7A	; 122
  f4:	f0 e0       	ldi	r31, 0x00	; 0
  f6:	87 e0       	ldi	r24, 0x07	; 7
  f8:	80 83       	st	Z, r24
  ADCSRA |= _BV(ADEN); // włącz ADC
  fa:	80 81       	ld	r24, Z
  fc:	80 68       	ori	r24, 0x80	; 128
  fe:	80 83       	st	Z, r24
 100:	08 95       	ret

00000102 <adc_conversion>:
}

uint16_t adc_conversion(uint8_t channel){
  ADMUX &= 0xF0;
 102:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
 106:	90 7f       	andi	r25, 0xF0	; 240
 108:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
  ADMUX |= channel;
 10c:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
 110:	89 2b       	or	r24, r25
 112:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
  ADCSRA |= _BV(ADSC); // wykonaj konwersję
 116:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 11a:	80 64       	ori	r24, 0x40	; 64
 11c:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  loop_until_bit_is_clear(ADCSRA, ADSC); // czekaj na wykonanie pomiaru
 120:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 124:	86 fd       	sbrc	r24, 6
 126:	fc cf       	rjmp	.-8      	; 0x120 <adc_conversion+0x1e>
  uint16_t v = ADC; // weź zmierzoną wartość (0..1023)
 128:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 12c:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
  return v;
}
 130:	08 95       	ret

00000132 <main>:
#define UBRR_VALUE ((F_CPU)/16/(BAUD)-1)   // zgodnie ze wzorem

void uart_init()
{
  // ustaw baudrate
  UBRR0 = UBRR_VALUE;
 132:	87 e6       	ldi	r24, 0x67	; 103
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 13a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  // wyczyść rejestr UCSR0A
  UCSR0A = 0;
 13e:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  // włącz odbiornik i nadajnik
  UCSR0B = _BV(RXEN0) | _BV(TXEN0);
 142:	88 e1       	ldi	r24, 0x18	; 24
 144:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
  // ustaw format 8n1
  UCSR0C = _BV(UCSZ00) | _BV(UCSZ01);
 148:	86 e0       	ldi	r24, 0x06	; 6
 14a:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
FILE uart_file;

// inicjalizacja ADC
void adc_init()
{
  ADMUX   = _BV(REFS0) | _BV(REFS1); // referencja 1.1V
 14e:	80 ec       	ldi	r24, 0xC0	; 192
 150:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
  DIDR0   = _BV(ADC0D); // wyłącz wejście cyfrowe na ADC0
 154:	81 e0       	ldi	r24, 0x01	; 1
 156:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7f807e>
  // częstotliwość zegara ADC 125 kHz (16 MHz / 128)
  ADCSRA  = _BV(ADPS0) | _BV(ADPS1) | _BV(ADPS2); // preskaler 128
 15a:	87 e0       	ldi	r24, 0x07	; 7
 15c:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  ADCSRA |= _BV(ADEN); // włącz ADC
 160:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 164:	80 68       	ori	r24, 0x80	; 128
 166:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
{
  uart_init();
  // zainicjalizuj ADC
  adc_init();
  // skonfiguruj strumienie wejścia/wyjścia
  fdev_setup_stream(&uart_file, uart_transmit, uart_receive, _FDEV_SETUP_RW);
 16a:	8c e0       	ldi	r24, 0x0C	; 12
 16c:	91 e0       	ldi	r25, 0x01	; 1
 16e:	23 e5       	ldi	r18, 0x53	; 83
 170:	30 e0       	ldi	r19, 0x00	; 0
 172:	30 93 15 01 	sts	0x0115, r19	; 0x800115 <__data_end+0x9>
 176:	20 93 14 01 	sts	0x0114, r18	; 0x800114 <__data_end+0x8>
 17a:	2c e5       	ldi	r18, 0x5C	; 92
 17c:	30 e0       	ldi	r19, 0x00	; 0
 17e:	30 93 17 01 	sts	0x0117, r19	; 0x800117 <__data_end+0xb>
 182:	20 93 16 01 	sts	0x0116, r18	; 0x800116 <__data_end+0xa>
 186:	23 e0       	ldi	r18, 0x03	; 3
 188:	20 93 0f 01 	sts	0x010F, r18	; 0x80010f <__data_end+0x3>
 18c:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <__data_end+0xd>
 190:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <__data_end+0xc>
  stdin = stdout = stderr = &uart_file;
 194:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <__iob+0x5>
 198:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <__iob+0x4>
 19c:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <__iob+0x3>
 1a0:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <__iob+0x2>
 1a4:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <__iob+0x1>
 1a8:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <__iob>

  DDRB |= _BV(PB5);
 1ac:	25 9a       	sbi	0x04, 5	; 4
  PORTB |= _BV(PB5);
 1ae:	2d 9a       	sbi	0x05, 5	; 5
  while(1) {
    uint16_t temp = adc_conversion(0);
    printf("Odczyt: %"PRIu16, temp);
 1b0:	c0 e0       	ldi	r28, 0x00	; 0
 1b2:	d1 e0       	ldi	r29, 0x01	; 1
  ADCSRA  = _BV(ADPS0) | _BV(ADPS1) | _BV(ADPS2); // preskaler 128
  ADCSRA |= _BV(ADEN); // włącz ADC
}

uint16_t adc_conversion(uint8_t channel){
  ADMUX &= 0xF0;
 1b4:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
 1b8:	80 7f       	andi	r24, 0xF0	; 240
 1ba:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
  ADMUX |= channel;
 1be:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
 1c2:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
  ADCSRA |= _BV(ADSC); // wykonaj konwersję
 1c6:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 1ca:	80 64       	ori	r24, 0x40	; 64
 1cc:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  loop_until_bit_is_clear(ADCSRA, ADSC); // czekaj na wykonanie pomiaru
 1d0:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 1d4:	86 fd       	sbrc	r24, 6
 1d6:	fc cf       	rjmp	.-8      	; 0x1d0 <main+0x9e>
  uint16_t v = ADC; // weź zmierzoną wartość (0..1023)
 1d8:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 1dc:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>

  DDRB |= _BV(PB5);
  PORTB |= _BV(PB5);
  while(1) {
    uint16_t temp = adc_conversion(0);
    printf("Odczyt: %"PRIu16, temp);
 1e0:	9f 93       	push	r25
 1e2:	8f 93       	push	r24
 1e4:	df 93       	push	r29
 1e6:	cf 93       	push	r28
 1e8:	0e 94 04 01 	call	0x208	; 0x208 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1ec:	9f ef       	ldi	r25, 0xFF	; 255
 1ee:	21 ee       	ldi	r18, 0xE1	; 225
 1f0:	84 e0       	ldi	r24, 0x04	; 4
 1f2:	91 50       	subi	r25, 0x01	; 1
 1f4:	20 40       	sbci	r18, 0x00	; 0
 1f6:	80 40       	sbci	r24, 0x00	; 0
 1f8:	e1 f7       	brne	.-8      	; 0x1f2 <main+0xc0>
 1fa:	00 c0       	rjmp	.+0      	; 0x1fc <main+0xca>
 1fc:	00 00       	nop
 1fe:	0f 90       	pop	r0
 200:	0f 90       	pop	r0
 202:	0f 90       	pop	r0
 204:	0f 90       	pop	r0
 206:	d6 cf       	rjmp	.-84     	; 0x1b4 <main+0x82>

00000208 <printf>:
 208:	a0 e0       	ldi	r26, 0x00	; 0
 20a:	b0 e0       	ldi	r27, 0x00	; 0
 20c:	ea e0       	ldi	r30, 0x0A	; 10
 20e:	f1 e0       	ldi	r31, 0x01	; 1
 210:	0c 94 bb 03 	jmp	0x776	; 0x776 <__prologue_saves__+0x20>
 214:	ae 01       	movw	r20, r28
 216:	4b 5f       	subi	r20, 0xFB	; 251
 218:	5f 4f       	sbci	r21, 0xFF	; 255
 21a:	fa 01       	movw	r30, r20
 21c:	61 91       	ld	r22, Z+
 21e:	71 91       	ld	r23, Z+
 220:	af 01       	movw	r20, r30
 222:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <__iob+0x2>
 226:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <__iob+0x3>
 22a:	0e 94 1a 01 	call	0x234	; 0x234 <vfprintf>
 22e:	e2 e0       	ldi	r30, 0x02	; 2
 230:	0c 94 d7 03 	jmp	0x7ae	; 0x7ae <__epilogue_restores__+0x20>

00000234 <vfprintf>:
 234:	ab e0       	ldi	r26, 0x0B	; 11
 236:	b0 e0       	ldi	r27, 0x00	; 0
 238:	e0 e2       	ldi	r30, 0x20	; 32
 23a:	f1 e0       	ldi	r31, 0x01	; 1
 23c:	0c 94 ab 03 	jmp	0x756	; 0x756 <__prologue_saves__>
 240:	6c 01       	movw	r12, r24
 242:	7b 01       	movw	r14, r22
 244:	8a 01       	movw	r16, r20
 246:	fc 01       	movw	r30, r24
 248:	17 82       	std	Z+7, r1	; 0x07
 24a:	16 82       	std	Z+6, r1	; 0x06
 24c:	83 81       	ldd	r24, Z+3	; 0x03
 24e:	81 ff       	sbrs	r24, 1
 250:	cc c1       	rjmp	.+920    	; 0x5ea <__EEPROM_REGION_LENGTH__+0x1ea>
 252:	ce 01       	movw	r24, r28
 254:	01 96       	adiw	r24, 0x01	; 1
 256:	3c 01       	movw	r6, r24
 258:	f6 01       	movw	r30, r12
 25a:	93 81       	ldd	r25, Z+3	; 0x03
 25c:	f7 01       	movw	r30, r14
 25e:	93 fd       	sbrc	r25, 3
 260:	85 91       	lpm	r24, Z+
 262:	93 ff       	sbrs	r25, 3
 264:	81 91       	ld	r24, Z+
 266:	7f 01       	movw	r14, r30
 268:	88 23       	and	r24, r24
 26a:	09 f4       	brne	.+2      	; 0x26e <vfprintf+0x3a>
 26c:	ba c1       	rjmp	.+884    	; 0x5e2 <__EEPROM_REGION_LENGTH__+0x1e2>
 26e:	85 32       	cpi	r24, 0x25	; 37
 270:	39 f4       	brne	.+14     	; 0x280 <vfprintf+0x4c>
 272:	93 fd       	sbrc	r25, 3
 274:	85 91       	lpm	r24, Z+
 276:	93 ff       	sbrs	r25, 3
 278:	81 91       	ld	r24, Z+
 27a:	7f 01       	movw	r14, r30
 27c:	85 32       	cpi	r24, 0x25	; 37
 27e:	29 f4       	brne	.+10     	; 0x28a <vfprintf+0x56>
 280:	b6 01       	movw	r22, r12
 282:	90 e0       	ldi	r25, 0x00	; 0
 284:	0e 94 11 03 	call	0x622	; 0x622 <fputc>
 288:	e7 cf       	rjmp	.-50     	; 0x258 <vfprintf+0x24>
 28a:	91 2c       	mov	r9, r1
 28c:	21 2c       	mov	r2, r1
 28e:	31 2c       	mov	r3, r1
 290:	ff e1       	ldi	r31, 0x1F	; 31
 292:	f3 15       	cp	r31, r3
 294:	d8 f0       	brcs	.+54     	; 0x2cc <vfprintf+0x98>
 296:	8b 32       	cpi	r24, 0x2B	; 43
 298:	79 f0       	breq	.+30     	; 0x2b8 <vfprintf+0x84>
 29a:	38 f4       	brcc	.+14     	; 0x2aa <vfprintf+0x76>
 29c:	80 32       	cpi	r24, 0x20	; 32
 29e:	79 f0       	breq	.+30     	; 0x2be <vfprintf+0x8a>
 2a0:	83 32       	cpi	r24, 0x23	; 35
 2a2:	a1 f4       	brne	.+40     	; 0x2cc <vfprintf+0x98>
 2a4:	23 2d       	mov	r18, r3
 2a6:	20 61       	ori	r18, 0x10	; 16
 2a8:	1d c0       	rjmp	.+58     	; 0x2e4 <vfprintf+0xb0>
 2aa:	8d 32       	cpi	r24, 0x2D	; 45
 2ac:	61 f0       	breq	.+24     	; 0x2c6 <vfprintf+0x92>
 2ae:	80 33       	cpi	r24, 0x30	; 48
 2b0:	69 f4       	brne	.+26     	; 0x2cc <vfprintf+0x98>
 2b2:	23 2d       	mov	r18, r3
 2b4:	21 60       	ori	r18, 0x01	; 1
 2b6:	16 c0       	rjmp	.+44     	; 0x2e4 <vfprintf+0xb0>
 2b8:	83 2d       	mov	r24, r3
 2ba:	82 60       	ori	r24, 0x02	; 2
 2bc:	38 2e       	mov	r3, r24
 2be:	e3 2d       	mov	r30, r3
 2c0:	e4 60       	ori	r30, 0x04	; 4
 2c2:	3e 2e       	mov	r3, r30
 2c4:	2a c0       	rjmp	.+84     	; 0x31a <vfprintf+0xe6>
 2c6:	f3 2d       	mov	r31, r3
 2c8:	f8 60       	ori	r31, 0x08	; 8
 2ca:	1d c0       	rjmp	.+58     	; 0x306 <vfprintf+0xd2>
 2cc:	37 fc       	sbrc	r3, 7
 2ce:	2d c0       	rjmp	.+90     	; 0x32a <vfprintf+0xf6>
 2d0:	20 ed       	ldi	r18, 0xD0	; 208
 2d2:	28 0f       	add	r18, r24
 2d4:	2a 30       	cpi	r18, 0x0A	; 10
 2d6:	40 f0       	brcs	.+16     	; 0x2e8 <vfprintf+0xb4>
 2d8:	8e 32       	cpi	r24, 0x2E	; 46
 2da:	b9 f4       	brne	.+46     	; 0x30a <vfprintf+0xd6>
 2dc:	36 fc       	sbrc	r3, 6
 2de:	81 c1       	rjmp	.+770    	; 0x5e2 <__EEPROM_REGION_LENGTH__+0x1e2>
 2e0:	23 2d       	mov	r18, r3
 2e2:	20 64       	ori	r18, 0x40	; 64
 2e4:	32 2e       	mov	r3, r18
 2e6:	19 c0       	rjmp	.+50     	; 0x31a <vfprintf+0xe6>
 2e8:	36 fe       	sbrs	r3, 6
 2ea:	06 c0       	rjmp	.+12     	; 0x2f8 <vfprintf+0xc4>
 2ec:	8a e0       	ldi	r24, 0x0A	; 10
 2ee:	98 9e       	mul	r9, r24
 2f0:	20 0d       	add	r18, r0
 2f2:	11 24       	eor	r1, r1
 2f4:	92 2e       	mov	r9, r18
 2f6:	11 c0       	rjmp	.+34     	; 0x31a <vfprintf+0xe6>
 2f8:	ea e0       	ldi	r30, 0x0A	; 10
 2fa:	2e 9e       	mul	r2, r30
 2fc:	20 0d       	add	r18, r0
 2fe:	11 24       	eor	r1, r1
 300:	22 2e       	mov	r2, r18
 302:	f3 2d       	mov	r31, r3
 304:	f0 62       	ori	r31, 0x20	; 32
 306:	3f 2e       	mov	r3, r31
 308:	08 c0       	rjmp	.+16     	; 0x31a <vfprintf+0xe6>
 30a:	8c 36       	cpi	r24, 0x6C	; 108
 30c:	21 f4       	brne	.+8      	; 0x316 <vfprintf+0xe2>
 30e:	83 2d       	mov	r24, r3
 310:	80 68       	ori	r24, 0x80	; 128
 312:	38 2e       	mov	r3, r24
 314:	02 c0       	rjmp	.+4      	; 0x31a <vfprintf+0xe6>
 316:	88 36       	cpi	r24, 0x68	; 104
 318:	41 f4       	brne	.+16     	; 0x32a <vfprintf+0xf6>
 31a:	f7 01       	movw	r30, r14
 31c:	93 fd       	sbrc	r25, 3
 31e:	85 91       	lpm	r24, Z+
 320:	93 ff       	sbrs	r25, 3
 322:	81 91       	ld	r24, Z+
 324:	7f 01       	movw	r14, r30
 326:	81 11       	cpse	r24, r1
 328:	b3 cf       	rjmp	.-154    	; 0x290 <vfprintf+0x5c>
 32a:	98 2f       	mov	r25, r24
 32c:	9f 7d       	andi	r25, 0xDF	; 223
 32e:	95 54       	subi	r25, 0x45	; 69
 330:	93 30       	cpi	r25, 0x03	; 3
 332:	28 f4       	brcc	.+10     	; 0x33e <vfprintf+0x10a>
 334:	0c 5f       	subi	r16, 0xFC	; 252
 336:	1f 4f       	sbci	r17, 0xFF	; 255
 338:	9f e3       	ldi	r25, 0x3F	; 63
 33a:	99 83       	std	Y+1, r25	; 0x01
 33c:	0d c0       	rjmp	.+26     	; 0x358 <vfprintf+0x124>
 33e:	83 36       	cpi	r24, 0x63	; 99
 340:	31 f0       	breq	.+12     	; 0x34e <vfprintf+0x11a>
 342:	83 37       	cpi	r24, 0x73	; 115
 344:	71 f0       	breq	.+28     	; 0x362 <vfprintf+0x12e>
 346:	83 35       	cpi	r24, 0x53	; 83
 348:	09 f0       	breq	.+2      	; 0x34c <vfprintf+0x118>
 34a:	59 c0       	rjmp	.+178    	; 0x3fe <vfprintf+0x1ca>
 34c:	21 c0       	rjmp	.+66     	; 0x390 <vfprintf+0x15c>
 34e:	f8 01       	movw	r30, r16
 350:	80 81       	ld	r24, Z
 352:	89 83       	std	Y+1, r24	; 0x01
 354:	0e 5f       	subi	r16, 0xFE	; 254
 356:	1f 4f       	sbci	r17, 0xFF	; 255
 358:	88 24       	eor	r8, r8
 35a:	83 94       	inc	r8
 35c:	91 2c       	mov	r9, r1
 35e:	53 01       	movw	r10, r6
 360:	13 c0       	rjmp	.+38     	; 0x388 <vfprintf+0x154>
 362:	28 01       	movw	r4, r16
 364:	f2 e0       	ldi	r31, 0x02	; 2
 366:	4f 0e       	add	r4, r31
 368:	51 1c       	adc	r5, r1
 36a:	f8 01       	movw	r30, r16
 36c:	a0 80       	ld	r10, Z
 36e:	b1 80       	ldd	r11, Z+1	; 0x01
 370:	36 fe       	sbrs	r3, 6
 372:	03 c0       	rjmp	.+6      	; 0x37a <vfprintf+0x146>
 374:	69 2d       	mov	r22, r9
 376:	70 e0       	ldi	r23, 0x00	; 0
 378:	02 c0       	rjmp	.+4      	; 0x37e <vfprintf+0x14a>
 37a:	6f ef       	ldi	r22, 0xFF	; 255
 37c:	7f ef       	ldi	r23, 0xFF	; 255
 37e:	c5 01       	movw	r24, r10
 380:	0e 94 06 03 	call	0x60c	; 0x60c <strnlen>
 384:	4c 01       	movw	r8, r24
 386:	82 01       	movw	r16, r4
 388:	f3 2d       	mov	r31, r3
 38a:	ff 77       	andi	r31, 0x7F	; 127
 38c:	3f 2e       	mov	r3, r31
 38e:	16 c0       	rjmp	.+44     	; 0x3bc <vfprintf+0x188>
 390:	28 01       	movw	r4, r16
 392:	22 e0       	ldi	r18, 0x02	; 2
 394:	42 0e       	add	r4, r18
 396:	51 1c       	adc	r5, r1
 398:	f8 01       	movw	r30, r16
 39a:	a0 80       	ld	r10, Z
 39c:	b1 80       	ldd	r11, Z+1	; 0x01
 39e:	36 fe       	sbrs	r3, 6
 3a0:	03 c0       	rjmp	.+6      	; 0x3a8 <vfprintf+0x174>
 3a2:	69 2d       	mov	r22, r9
 3a4:	70 e0       	ldi	r23, 0x00	; 0
 3a6:	02 c0       	rjmp	.+4      	; 0x3ac <vfprintf+0x178>
 3a8:	6f ef       	ldi	r22, 0xFF	; 255
 3aa:	7f ef       	ldi	r23, 0xFF	; 255
 3ac:	c5 01       	movw	r24, r10
 3ae:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <strnlen_P>
 3b2:	4c 01       	movw	r8, r24
 3b4:	f3 2d       	mov	r31, r3
 3b6:	f0 68       	ori	r31, 0x80	; 128
 3b8:	3f 2e       	mov	r3, r31
 3ba:	82 01       	movw	r16, r4
 3bc:	33 fc       	sbrc	r3, 3
 3be:	1b c0       	rjmp	.+54     	; 0x3f6 <vfprintf+0x1c2>
 3c0:	82 2d       	mov	r24, r2
 3c2:	90 e0       	ldi	r25, 0x00	; 0
 3c4:	88 16       	cp	r8, r24
 3c6:	99 06       	cpc	r9, r25
 3c8:	b0 f4       	brcc	.+44     	; 0x3f6 <vfprintf+0x1c2>
 3ca:	b6 01       	movw	r22, r12
 3cc:	80 e2       	ldi	r24, 0x20	; 32
 3ce:	90 e0       	ldi	r25, 0x00	; 0
 3d0:	0e 94 11 03 	call	0x622	; 0x622 <fputc>
 3d4:	2a 94       	dec	r2
 3d6:	f4 cf       	rjmp	.-24     	; 0x3c0 <vfprintf+0x18c>
 3d8:	f5 01       	movw	r30, r10
 3da:	37 fc       	sbrc	r3, 7
 3dc:	85 91       	lpm	r24, Z+
 3de:	37 fe       	sbrs	r3, 7
 3e0:	81 91       	ld	r24, Z+
 3e2:	5f 01       	movw	r10, r30
 3e4:	b6 01       	movw	r22, r12
 3e6:	90 e0       	ldi	r25, 0x00	; 0
 3e8:	0e 94 11 03 	call	0x622	; 0x622 <fputc>
 3ec:	21 10       	cpse	r2, r1
 3ee:	2a 94       	dec	r2
 3f0:	21 e0       	ldi	r18, 0x01	; 1
 3f2:	82 1a       	sub	r8, r18
 3f4:	91 08       	sbc	r9, r1
 3f6:	81 14       	cp	r8, r1
 3f8:	91 04       	cpc	r9, r1
 3fa:	71 f7       	brne	.-36     	; 0x3d8 <vfprintf+0x1a4>
 3fc:	e8 c0       	rjmp	.+464    	; 0x5ce <__EEPROM_REGION_LENGTH__+0x1ce>
 3fe:	84 36       	cpi	r24, 0x64	; 100
 400:	11 f0       	breq	.+4      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 402:	89 36       	cpi	r24, 0x69	; 105
 404:	41 f5       	brne	.+80     	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
 406:	f8 01       	movw	r30, r16
 408:	37 fe       	sbrs	r3, 7
 40a:	07 c0       	rjmp	.+14     	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 40c:	60 81       	ld	r22, Z
 40e:	71 81       	ldd	r23, Z+1	; 0x01
 410:	82 81       	ldd	r24, Z+2	; 0x02
 412:	93 81       	ldd	r25, Z+3	; 0x03
 414:	0c 5f       	subi	r16, 0xFC	; 252
 416:	1f 4f       	sbci	r17, 0xFF	; 255
 418:	08 c0       	rjmp	.+16     	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 41a:	60 81       	ld	r22, Z
 41c:	71 81       	ldd	r23, Z+1	; 0x01
 41e:	07 2e       	mov	r0, r23
 420:	00 0c       	add	r0, r0
 422:	88 0b       	sbc	r24, r24
 424:	99 0b       	sbc	r25, r25
 426:	0e 5f       	subi	r16, 0xFE	; 254
 428:	1f 4f       	sbci	r17, 0xFF	; 255
 42a:	f3 2d       	mov	r31, r3
 42c:	ff 76       	andi	r31, 0x6F	; 111
 42e:	3f 2e       	mov	r3, r31
 430:	97 ff       	sbrs	r25, 7
 432:	09 c0       	rjmp	.+18     	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
 434:	90 95       	com	r25
 436:	80 95       	com	r24
 438:	70 95       	com	r23
 43a:	61 95       	neg	r22
 43c:	7f 4f       	sbci	r23, 0xFF	; 255
 43e:	8f 4f       	sbci	r24, 0xFF	; 255
 440:	9f 4f       	sbci	r25, 0xFF	; 255
 442:	f0 68       	ori	r31, 0x80	; 128
 444:	3f 2e       	mov	r3, r31
 446:	2a e0       	ldi	r18, 0x0A	; 10
 448:	30 e0       	ldi	r19, 0x00	; 0
 44a:	a3 01       	movw	r20, r6
 44c:	0e 94 4d 03 	call	0x69a	; 0x69a <__ultoa_invert>
 450:	88 2e       	mov	r8, r24
 452:	86 18       	sub	r8, r6
 454:	45 c0       	rjmp	.+138    	; 0x4e0 <__EEPROM_REGION_LENGTH__+0xe0>
 456:	85 37       	cpi	r24, 0x75	; 117
 458:	31 f4       	brne	.+12     	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
 45a:	23 2d       	mov	r18, r3
 45c:	2f 7e       	andi	r18, 0xEF	; 239
 45e:	b2 2e       	mov	r11, r18
 460:	2a e0       	ldi	r18, 0x0A	; 10
 462:	30 e0       	ldi	r19, 0x00	; 0
 464:	25 c0       	rjmp	.+74     	; 0x4b0 <__EEPROM_REGION_LENGTH__+0xb0>
 466:	93 2d       	mov	r25, r3
 468:	99 7f       	andi	r25, 0xF9	; 249
 46a:	b9 2e       	mov	r11, r25
 46c:	8f 36       	cpi	r24, 0x6F	; 111
 46e:	c1 f0       	breq	.+48     	; 0x4a0 <__EEPROM_REGION_LENGTH__+0xa0>
 470:	18 f4       	brcc	.+6      	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
 472:	88 35       	cpi	r24, 0x58	; 88
 474:	79 f0       	breq	.+30     	; 0x494 <__EEPROM_REGION_LENGTH__+0x94>
 476:	b5 c0       	rjmp	.+362    	; 0x5e2 <__EEPROM_REGION_LENGTH__+0x1e2>
 478:	80 37       	cpi	r24, 0x70	; 112
 47a:	19 f0       	breq	.+6      	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
 47c:	88 37       	cpi	r24, 0x78	; 120
 47e:	21 f0       	breq	.+8      	; 0x488 <__EEPROM_REGION_LENGTH__+0x88>
 480:	b0 c0       	rjmp	.+352    	; 0x5e2 <__EEPROM_REGION_LENGTH__+0x1e2>
 482:	e9 2f       	mov	r30, r25
 484:	e0 61       	ori	r30, 0x10	; 16
 486:	be 2e       	mov	r11, r30
 488:	b4 fe       	sbrs	r11, 4
 48a:	0d c0       	rjmp	.+26     	; 0x4a6 <__EEPROM_REGION_LENGTH__+0xa6>
 48c:	fb 2d       	mov	r31, r11
 48e:	f4 60       	ori	r31, 0x04	; 4
 490:	bf 2e       	mov	r11, r31
 492:	09 c0       	rjmp	.+18     	; 0x4a6 <__EEPROM_REGION_LENGTH__+0xa6>
 494:	34 fe       	sbrs	r3, 4
 496:	0a c0       	rjmp	.+20     	; 0x4ac <__EEPROM_REGION_LENGTH__+0xac>
 498:	29 2f       	mov	r18, r25
 49a:	26 60       	ori	r18, 0x06	; 6
 49c:	b2 2e       	mov	r11, r18
 49e:	06 c0       	rjmp	.+12     	; 0x4ac <__EEPROM_REGION_LENGTH__+0xac>
 4a0:	28 e0       	ldi	r18, 0x08	; 8
 4a2:	30 e0       	ldi	r19, 0x00	; 0
 4a4:	05 c0       	rjmp	.+10     	; 0x4b0 <__EEPROM_REGION_LENGTH__+0xb0>
 4a6:	20 e1       	ldi	r18, 0x10	; 16
 4a8:	30 e0       	ldi	r19, 0x00	; 0
 4aa:	02 c0       	rjmp	.+4      	; 0x4b0 <__EEPROM_REGION_LENGTH__+0xb0>
 4ac:	20 e1       	ldi	r18, 0x10	; 16
 4ae:	32 e0       	ldi	r19, 0x02	; 2
 4b0:	f8 01       	movw	r30, r16
 4b2:	b7 fe       	sbrs	r11, 7
 4b4:	07 c0       	rjmp	.+14     	; 0x4c4 <__EEPROM_REGION_LENGTH__+0xc4>
 4b6:	60 81       	ld	r22, Z
 4b8:	71 81       	ldd	r23, Z+1	; 0x01
 4ba:	82 81       	ldd	r24, Z+2	; 0x02
 4bc:	93 81       	ldd	r25, Z+3	; 0x03
 4be:	0c 5f       	subi	r16, 0xFC	; 252
 4c0:	1f 4f       	sbci	r17, 0xFF	; 255
 4c2:	06 c0       	rjmp	.+12     	; 0x4d0 <__EEPROM_REGION_LENGTH__+0xd0>
 4c4:	60 81       	ld	r22, Z
 4c6:	71 81       	ldd	r23, Z+1	; 0x01
 4c8:	80 e0       	ldi	r24, 0x00	; 0
 4ca:	90 e0       	ldi	r25, 0x00	; 0
 4cc:	0e 5f       	subi	r16, 0xFE	; 254
 4ce:	1f 4f       	sbci	r17, 0xFF	; 255
 4d0:	a3 01       	movw	r20, r6
 4d2:	0e 94 4d 03 	call	0x69a	; 0x69a <__ultoa_invert>
 4d6:	88 2e       	mov	r8, r24
 4d8:	86 18       	sub	r8, r6
 4da:	fb 2d       	mov	r31, r11
 4dc:	ff 77       	andi	r31, 0x7F	; 127
 4de:	3f 2e       	mov	r3, r31
 4e0:	36 fe       	sbrs	r3, 6
 4e2:	0d c0       	rjmp	.+26     	; 0x4fe <__EEPROM_REGION_LENGTH__+0xfe>
 4e4:	23 2d       	mov	r18, r3
 4e6:	2e 7f       	andi	r18, 0xFE	; 254
 4e8:	a2 2e       	mov	r10, r18
 4ea:	89 14       	cp	r8, r9
 4ec:	58 f4       	brcc	.+22     	; 0x504 <__EEPROM_REGION_LENGTH__+0x104>
 4ee:	34 fe       	sbrs	r3, 4
 4f0:	0b c0       	rjmp	.+22     	; 0x508 <__EEPROM_REGION_LENGTH__+0x108>
 4f2:	32 fc       	sbrc	r3, 2
 4f4:	09 c0       	rjmp	.+18     	; 0x508 <__EEPROM_REGION_LENGTH__+0x108>
 4f6:	83 2d       	mov	r24, r3
 4f8:	8e 7e       	andi	r24, 0xEE	; 238
 4fa:	a8 2e       	mov	r10, r24
 4fc:	05 c0       	rjmp	.+10     	; 0x508 <__EEPROM_REGION_LENGTH__+0x108>
 4fe:	b8 2c       	mov	r11, r8
 500:	a3 2c       	mov	r10, r3
 502:	03 c0       	rjmp	.+6      	; 0x50a <__EEPROM_REGION_LENGTH__+0x10a>
 504:	b8 2c       	mov	r11, r8
 506:	01 c0       	rjmp	.+2      	; 0x50a <__EEPROM_REGION_LENGTH__+0x10a>
 508:	b9 2c       	mov	r11, r9
 50a:	a4 fe       	sbrs	r10, 4
 50c:	0f c0       	rjmp	.+30     	; 0x52c <__EEPROM_REGION_LENGTH__+0x12c>
 50e:	fe 01       	movw	r30, r28
 510:	e8 0d       	add	r30, r8
 512:	f1 1d       	adc	r31, r1
 514:	80 81       	ld	r24, Z
 516:	80 33       	cpi	r24, 0x30	; 48
 518:	21 f4       	brne	.+8      	; 0x522 <__EEPROM_REGION_LENGTH__+0x122>
 51a:	9a 2d       	mov	r25, r10
 51c:	99 7e       	andi	r25, 0xE9	; 233
 51e:	a9 2e       	mov	r10, r25
 520:	09 c0       	rjmp	.+18     	; 0x534 <__EEPROM_REGION_LENGTH__+0x134>
 522:	a2 fe       	sbrs	r10, 2
 524:	06 c0       	rjmp	.+12     	; 0x532 <__EEPROM_REGION_LENGTH__+0x132>
 526:	b3 94       	inc	r11
 528:	b3 94       	inc	r11
 52a:	04 c0       	rjmp	.+8      	; 0x534 <__EEPROM_REGION_LENGTH__+0x134>
 52c:	8a 2d       	mov	r24, r10
 52e:	86 78       	andi	r24, 0x86	; 134
 530:	09 f0       	breq	.+2      	; 0x534 <__EEPROM_REGION_LENGTH__+0x134>
 532:	b3 94       	inc	r11
 534:	a3 fc       	sbrc	r10, 3
 536:	11 c0       	rjmp	.+34     	; 0x55a <__EEPROM_REGION_LENGTH__+0x15a>
 538:	a0 fe       	sbrs	r10, 0
 53a:	06 c0       	rjmp	.+12     	; 0x548 <__EEPROM_REGION_LENGTH__+0x148>
 53c:	b2 14       	cp	r11, r2
 53e:	88 f4       	brcc	.+34     	; 0x562 <__EEPROM_REGION_LENGTH__+0x162>
 540:	28 0c       	add	r2, r8
 542:	92 2c       	mov	r9, r2
 544:	9b 18       	sub	r9, r11
 546:	0e c0       	rjmp	.+28     	; 0x564 <__EEPROM_REGION_LENGTH__+0x164>
 548:	b2 14       	cp	r11, r2
 54a:	60 f4       	brcc	.+24     	; 0x564 <__EEPROM_REGION_LENGTH__+0x164>
 54c:	b6 01       	movw	r22, r12
 54e:	80 e2       	ldi	r24, 0x20	; 32
 550:	90 e0       	ldi	r25, 0x00	; 0
 552:	0e 94 11 03 	call	0x622	; 0x622 <fputc>
 556:	b3 94       	inc	r11
 558:	f7 cf       	rjmp	.-18     	; 0x548 <__EEPROM_REGION_LENGTH__+0x148>
 55a:	b2 14       	cp	r11, r2
 55c:	18 f4       	brcc	.+6      	; 0x564 <__EEPROM_REGION_LENGTH__+0x164>
 55e:	2b 18       	sub	r2, r11
 560:	02 c0       	rjmp	.+4      	; 0x566 <__EEPROM_REGION_LENGTH__+0x166>
 562:	98 2c       	mov	r9, r8
 564:	21 2c       	mov	r2, r1
 566:	a4 fe       	sbrs	r10, 4
 568:	10 c0       	rjmp	.+32     	; 0x58a <__EEPROM_REGION_LENGTH__+0x18a>
 56a:	b6 01       	movw	r22, r12
 56c:	80 e3       	ldi	r24, 0x30	; 48
 56e:	90 e0       	ldi	r25, 0x00	; 0
 570:	0e 94 11 03 	call	0x622	; 0x622 <fputc>
 574:	a2 fe       	sbrs	r10, 2
 576:	17 c0       	rjmp	.+46     	; 0x5a6 <__EEPROM_REGION_LENGTH__+0x1a6>
 578:	a1 fc       	sbrc	r10, 1
 57a:	03 c0       	rjmp	.+6      	; 0x582 <__EEPROM_REGION_LENGTH__+0x182>
 57c:	88 e7       	ldi	r24, 0x78	; 120
 57e:	90 e0       	ldi	r25, 0x00	; 0
 580:	02 c0       	rjmp	.+4      	; 0x586 <__EEPROM_REGION_LENGTH__+0x186>
 582:	88 e5       	ldi	r24, 0x58	; 88
 584:	90 e0       	ldi	r25, 0x00	; 0
 586:	b6 01       	movw	r22, r12
 588:	0c c0       	rjmp	.+24     	; 0x5a2 <__EEPROM_REGION_LENGTH__+0x1a2>
 58a:	8a 2d       	mov	r24, r10
 58c:	86 78       	andi	r24, 0x86	; 134
 58e:	59 f0       	breq	.+22     	; 0x5a6 <__EEPROM_REGION_LENGTH__+0x1a6>
 590:	a1 fe       	sbrs	r10, 1
 592:	02 c0       	rjmp	.+4      	; 0x598 <__EEPROM_REGION_LENGTH__+0x198>
 594:	8b e2       	ldi	r24, 0x2B	; 43
 596:	01 c0       	rjmp	.+2      	; 0x59a <__EEPROM_REGION_LENGTH__+0x19a>
 598:	80 e2       	ldi	r24, 0x20	; 32
 59a:	a7 fc       	sbrc	r10, 7
 59c:	8d e2       	ldi	r24, 0x2D	; 45
 59e:	b6 01       	movw	r22, r12
 5a0:	90 e0       	ldi	r25, 0x00	; 0
 5a2:	0e 94 11 03 	call	0x622	; 0x622 <fputc>
 5a6:	89 14       	cp	r8, r9
 5a8:	38 f4       	brcc	.+14     	; 0x5b8 <__EEPROM_REGION_LENGTH__+0x1b8>
 5aa:	b6 01       	movw	r22, r12
 5ac:	80 e3       	ldi	r24, 0x30	; 48
 5ae:	90 e0       	ldi	r25, 0x00	; 0
 5b0:	0e 94 11 03 	call	0x622	; 0x622 <fputc>
 5b4:	9a 94       	dec	r9
 5b6:	f7 cf       	rjmp	.-18     	; 0x5a6 <__EEPROM_REGION_LENGTH__+0x1a6>
 5b8:	8a 94       	dec	r8
 5ba:	f3 01       	movw	r30, r6
 5bc:	e8 0d       	add	r30, r8
 5be:	f1 1d       	adc	r31, r1
 5c0:	80 81       	ld	r24, Z
 5c2:	b6 01       	movw	r22, r12
 5c4:	90 e0       	ldi	r25, 0x00	; 0
 5c6:	0e 94 11 03 	call	0x622	; 0x622 <fputc>
 5ca:	81 10       	cpse	r8, r1
 5cc:	f5 cf       	rjmp	.-22     	; 0x5b8 <__EEPROM_REGION_LENGTH__+0x1b8>
 5ce:	22 20       	and	r2, r2
 5d0:	09 f4       	brne	.+2      	; 0x5d4 <__EEPROM_REGION_LENGTH__+0x1d4>
 5d2:	42 ce       	rjmp	.-892    	; 0x258 <vfprintf+0x24>
 5d4:	b6 01       	movw	r22, r12
 5d6:	80 e2       	ldi	r24, 0x20	; 32
 5d8:	90 e0       	ldi	r25, 0x00	; 0
 5da:	0e 94 11 03 	call	0x622	; 0x622 <fputc>
 5de:	2a 94       	dec	r2
 5e0:	f6 cf       	rjmp	.-20     	; 0x5ce <__EEPROM_REGION_LENGTH__+0x1ce>
 5e2:	f6 01       	movw	r30, r12
 5e4:	86 81       	ldd	r24, Z+6	; 0x06
 5e6:	97 81       	ldd	r25, Z+7	; 0x07
 5e8:	02 c0       	rjmp	.+4      	; 0x5ee <__EEPROM_REGION_LENGTH__+0x1ee>
 5ea:	8f ef       	ldi	r24, 0xFF	; 255
 5ec:	9f ef       	ldi	r25, 0xFF	; 255
 5ee:	2b 96       	adiw	r28, 0x0b	; 11
 5f0:	e2 e1       	ldi	r30, 0x12	; 18
 5f2:	0c 94 c7 03 	jmp	0x78e	; 0x78e <__epilogue_restores__>

000005f6 <strnlen_P>:
 5f6:	fc 01       	movw	r30, r24
 5f8:	05 90       	lpm	r0, Z+
 5fa:	61 50       	subi	r22, 0x01	; 1
 5fc:	70 40       	sbci	r23, 0x00	; 0
 5fe:	01 10       	cpse	r0, r1
 600:	d8 f7       	brcc	.-10     	; 0x5f8 <strnlen_P+0x2>
 602:	80 95       	com	r24
 604:	90 95       	com	r25
 606:	8e 0f       	add	r24, r30
 608:	9f 1f       	adc	r25, r31
 60a:	08 95       	ret

0000060c <strnlen>:
 60c:	fc 01       	movw	r30, r24
 60e:	61 50       	subi	r22, 0x01	; 1
 610:	70 40       	sbci	r23, 0x00	; 0
 612:	01 90       	ld	r0, Z+
 614:	01 10       	cpse	r0, r1
 616:	d8 f7       	brcc	.-10     	; 0x60e <strnlen+0x2>
 618:	80 95       	com	r24
 61a:	90 95       	com	r25
 61c:	8e 0f       	add	r24, r30
 61e:	9f 1f       	adc	r25, r31
 620:	08 95       	ret

00000622 <fputc>:
 622:	0f 93       	push	r16
 624:	1f 93       	push	r17
 626:	cf 93       	push	r28
 628:	df 93       	push	r29
 62a:	fb 01       	movw	r30, r22
 62c:	23 81       	ldd	r18, Z+3	; 0x03
 62e:	21 fd       	sbrc	r18, 1
 630:	03 c0       	rjmp	.+6      	; 0x638 <fputc+0x16>
 632:	8f ef       	ldi	r24, 0xFF	; 255
 634:	9f ef       	ldi	r25, 0xFF	; 255
 636:	2c c0       	rjmp	.+88     	; 0x690 <fputc+0x6e>
 638:	22 ff       	sbrs	r18, 2
 63a:	16 c0       	rjmp	.+44     	; 0x668 <fputc+0x46>
 63c:	46 81       	ldd	r20, Z+6	; 0x06
 63e:	57 81       	ldd	r21, Z+7	; 0x07
 640:	24 81       	ldd	r18, Z+4	; 0x04
 642:	35 81       	ldd	r19, Z+5	; 0x05
 644:	42 17       	cp	r20, r18
 646:	53 07       	cpc	r21, r19
 648:	44 f4       	brge	.+16     	; 0x65a <fputc+0x38>
 64a:	a0 81       	ld	r26, Z
 64c:	b1 81       	ldd	r27, Z+1	; 0x01
 64e:	9d 01       	movw	r18, r26
 650:	2f 5f       	subi	r18, 0xFF	; 255
 652:	3f 4f       	sbci	r19, 0xFF	; 255
 654:	31 83       	std	Z+1, r19	; 0x01
 656:	20 83       	st	Z, r18
 658:	8c 93       	st	X, r24
 65a:	26 81       	ldd	r18, Z+6	; 0x06
 65c:	37 81       	ldd	r19, Z+7	; 0x07
 65e:	2f 5f       	subi	r18, 0xFF	; 255
 660:	3f 4f       	sbci	r19, 0xFF	; 255
 662:	37 83       	std	Z+7, r19	; 0x07
 664:	26 83       	std	Z+6, r18	; 0x06
 666:	14 c0       	rjmp	.+40     	; 0x690 <fputc+0x6e>
 668:	8b 01       	movw	r16, r22
 66a:	ec 01       	movw	r28, r24
 66c:	fb 01       	movw	r30, r22
 66e:	00 84       	ldd	r0, Z+8	; 0x08
 670:	f1 85       	ldd	r31, Z+9	; 0x09
 672:	e0 2d       	mov	r30, r0
 674:	09 95       	icall
 676:	89 2b       	or	r24, r25
 678:	e1 f6       	brne	.-72     	; 0x632 <fputc+0x10>
 67a:	d8 01       	movw	r26, r16
 67c:	16 96       	adiw	r26, 0x06	; 6
 67e:	8d 91       	ld	r24, X+
 680:	9c 91       	ld	r25, X
 682:	17 97       	sbiw	r26, 0x07	; 7
 684:	01 96       	adiw	r24, 0x01	; 1
 686:	17 96       	adiw	r26, 0x07	; 7
 688:	9c 93       	st	X, r25
 68a:	8e 93       	st	-X, r24
 68c:	16 97       	sbiw	r26, 0x06	; 6
 68e:	ce 01       	movw	r24, r28
 690:	df 91       	pop	r29
 692:	cf 91       	pop	r28
 694:	1f 91       	pop	r17
 696:	0f 91       	pop	r16
 698:	08 95       	ret

0000069a <__ultoa_invert>:
 69a:	fa 01       	movw	r30, r20
 69c:	aa 27       	eor	r26, r26
 69e:	28 30       	cpi	r18, 0x08	; 8
 6a0:	51 f1       	breq	.+84     	; 0x6f6 <__ultoa_invert+0x5c>
 6a2:	20 31       	cpi	r18, 0x10	; 16
 6a4:	81 f1       	breq	.+96     	; 0x706 <__ultoa_invert+0x6c>
 6a6:	e8 94       	clt
 6a8:	6f 93       	push	r22
 6aa:	6e 7f       	andi	r22, 0xFE	; 254
 6ac:	6e 5f       	subi	r22, 0xFE	; 254
 6ae:	7f 4f       	sbci	r23, 0xFF	; 255
 6b0:	8f 4f       	sbci	r24, 0xFF	; 255
 6b2:	9f 4f       	sbci	r25, 0xFF	; 255
 6b4:	af 4f       	sbci	r26, 0xFF	; 255
 6b6:	b1 e0       	ldi	r27, 0x01	; 1
 6b8:	3e d0       	rcall	.+124    	; 0x736 <__ultoa_invert+0x9c>
 6ba:	b4 e0       	ldi	r27, 0x04	; 4
 6bc:	3c d0       	rcall	.+120    	; 0x736 <__ultoa_invert+0x9c>
 6be:	67 0f       	add	r22, r23
 6c0:	78 1f       	adc	r23, r24
 6c2:	89 1f       	adc	r24, r25
 6c4:	9a 1f       	adc	r25, r26
 6c6:	a1 1d       	adc	r26, r1
 6c8:	68 0f       	add	r22, r24
 6ca:	79 1f       	adc	r23, r25
 6cc:	8a 1f       	adc	r24, r26
 6ce:	91 1d       	adc	r25, r1
 6d0:	a1 1d       	adc	r26, r1
 6d2:	6a 0f       	add	r22, r26
 6d4:	71 1d       	adc	r23, r1
 6d6:	81 1d       	adc	r24, r1
 6d8:	91 1d       	adc	r25, r1
 6da:	a1 1d       	adc	r26, r1
 6dc:	20 d0       	rcall	.+64     	; 0x71e <__ultoa_invert+0x84>
 6de:	09 f4       	brne	.+2      	; 0x6e2 <__ultoa_invert+0x48>
 6e0:	68 94       	set
 6e2:	3f 91       	pop	r19
 6e4:	2a e0       	ldi	r18, 0x0A	; 10
 6e6:	26 9f       	mul	r18, r22
 6e8:	11 24       	eor	r1, r1
 6ea:	30 19       	sub	r19, r0
 6ec:	30 5d       	subi	r19, 0xD0	; 208
 6ee:	31 93       	st	Z+, r19
 6f0:	de f6       	brtc	.-74     	; 0x6a8 <__ultoa_invert+0xe>
 6f2:	cf 01       	movw	r24, r30
 6f4:	08 95       	ret
 6f6:	46 2f       	mov	r20, r22
 6f8:	47 70       	andi	r20, 0x07	; 7
 6fa:	40 5d       	subi	r20, 0xD0	; 208
 6fc:	41 93       	st	Z+, r20
 6fe:	b3 e0       	ldi	r27, 0x03	; 3
 700:	0f d0       	rcall	.+30     	; 0x720 <__ultoa_invert+0x86>
 702:	c9 f7       	brne	.-14     	; 0x6f6 <__ultoa_invert+0x5c>
 704:	f6 cf       	rjmp	.-20     	; 0x6f2 <__ultoa_invert+0x58>
 706:	46 2f       	mov	r20, r22
 708:	4f 70       	andi	r20, 0x0F	; 15
 70a:	40 5d       	subi	r20, 0xD0	; 208
 70c:	4a 33       	cpi	r20, 0x3A	; 58
 70e:	18 f0       	brcs	.+6      	; 0x716 <__ultoa_invert+0x7c>
 710:	49 5d       	subi	r20, 0xD9	; 217
 712:	31 fd       	sbrc	r19, 1
 714:	40 52       	subi	r20, 0x20	; 32
 716:	41 93       	st	Z+, r20
 718:	02 d0       	rcall	.+4      	; 0x71e <__ultoa_invert+0x84>
 71a:	a9 f7       	brne	.-22     	; 0x706 <__ultoa_invert+0x6c>
 71c:	ea cf       	rjmp	.-44     	; 0x6f2 <__ultoa_invert+0x58>
 71e:	b4 e0       	ldi	r27, 0x04	; 4
 720:	a6 95       	lsr	r26
 722:	97 95       	ror	r25
 724:	87 95       	ror	r24
 726:	77 95       	ror	r23
 728:	67 95       	ror	r22
 72a:	ba 95       	dec	r27
 72c:	c9 f7       	brne	.-14     	; 0x720 <__ultoa_invert+0x86>
 72e:	00 97       	sbiw	r24, 0x00	; 0
 730:	61 05       	cpc	r22, r1
 732:	71 05       	cpc	r23, r1
 734:	08 95       	ret
 736:	9b 01       	movw	r18, r22
 738:	ac 01       	movw	r20, r24
 73a:	0a 2e       	mov	r0, r26
 73c:	06 94       	lsr	r0
 73e:	57 95       	ror	r21
 740:	47 95       	ror	r20
 742:	37 95       	ror	r19
 744:	27 95       	ror	r18
 746:	ba 95       	dec	r27
 748:	c9 f7       	brne	.-14     	; 0x73c <__ultoa_invert+0xa2>
 74a:	62 0f       	add	r22, r18
 74c:	73 1f       	adc	r23, r19
 74e:	84 1f       	adc	r24, r20
 750:	95 1f       	adc	r25, r21
 752:	a0 1d       	adc	r26, r0
 754:	08 95       	ret

00000756 <__prologue_saves__>:
 756:	2f 92       	push	r2
 758:	3f 92       	push	r3
 75a:	4f 92       	push	r4
 75c:	5f 92       	push	r5
 75e:	6f 92       	push	r6
 760:	7f 92       	push	r7
 762:	8f 92       	push	r8
 764:	9f 92       	push	r9
 766:	af 92       	push	r10
 768:	bf 92       	push	r11
 76a:	cf 92       	push	r12
 76c:	df 92       	push	r13
 76e:	ef 92       	push	r14
 770:	ff 92       	push	r15
 772:	0f 93       	push	r16
 774:	1f 93       	push	r17
 776:	cf 93       	push	r28
 778:	df 93       	push	r29
 77a:	cd b7       	in	r28, 0x3d	; 61
 77c:	de b7       	in	r29, 0x3e	; 62
 77e:	ca 1b       	sub	r28, r26
 780:	db 0b       	sbc	r29, r27
 782:	0f b6       	in	r0, 0x3f	; 63
 784:	f8 94       	cli
 786:	de bf       	out	0x3e, r29	; 62
 788:	0f be       	out	0x3f, r0	; 63
 78a:	cd bf       	out	0x3d, r28	; 61
 78c:	09 94       	ijmp

0000078e <__epilogue_restores__>:
 78e:	2a 88       	ldd	r2, Y+18	; 0x12
 790:	39 88       	ldd	r3, Y+17	; 0x11
 792:	48 88       	ldd	r4, Y+16	; 0x10
 794:	5f 84       	ldd	r5, Y+15	; 0x0f
 796:	6e 84       	ldd	r6, Y+14	; 0x0e
 798:	7d 84       	ldd	r7, Y+13	; 0x0d
 79a:	8c 84       	ldd	r8, Y+12	; 0x0c
 79c:	9b 84       	ldd	r9, Y+11	; 0x0b
 79e:	aa 84       	ldd	r10, Y+10	; 0x0a
 7a0:	b9 84       	ldd	r11, Y+9	; 0x09
 7a2:	c8 84       	ldd	r12, Y+8	; 0x08
 7a4:	df 80       	ldd	r13, Y+7	; 0x07
 7a6:	ee 80       	ldd	r14, Y+6	; 0x06
 7a8:	fd 80       	ldd	r15, Y+5	; 0x05
 7aa:	0c 81       	ldd	r16, Y+4	; 0x04
 7ac:	1b 81       	ldd	r17, Y+3	; 0x03
 7ae:	aa 81       	ldd	r26, Y+2	; 0x02
 7b0:	b9 81       	ldd	r27, Y+1	; 0x01
 7b2:	ce 0f       	add	r28, r30
 7b4:	d1 1d       	adc	r29, r1
 7b6:	0f b6       	in	r0, 0x3f	; 63
 7b8:	f8 94       	cli
 7ba:	de bf       	out	0x3e, r29	; 62
 7bc:	0f be       	out	0x3f, r0	; 63
 7be:	cd bf       	out	0x3d, r28	; 61
 7c0:	ed 01       	movw	r28, r26
 7c2:	08 95       	ret

000007c4 <_exit>:
 7c4:	f8 94       	cli

000007c6 <__stop_program>:
 7c6:	ff cf       	rjmp	.-2      	; 0x7c6 <__stop_program>
